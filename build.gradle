plugins {
    id "org.springframework.boot" version "2.1.5.RELEASE"
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id "io.wusa.semver-git-plugin" version "1.2.0"
    id "groovy"
    id "jacoco"
    id "com.palantir.docker" version "0.22.1"
}

def appTitle = "Biggy Events Writer"
group = "com.przemyslawsikora.biggy"
sourceCompatibility = 11
targetCompatibility = 11
project.version = semver.info.version
def dockerAddress = System.getProperty("docker_address", "docker.example.com")

repositories {
    jcenter()
    maven {
        url "http://packages.confluent.io/maven"
    }
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.kafka:spring-kafka:2.2.6.RELEASE"
    implementation "org.springframework.boot:spring-boot-devtools"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.threeten:threeten-extra:1.4"
    implementation "org.apache.avro:avro:1.9.0"
    implementation "io.confluent:kafka-avro-serializer:5.2.1"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.spockframework:spock-spring:1.3-groovy-2.5"
    testImplementation("com.athaydes:spock-reports:1.6.2") {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }
    testImplementation "org.hamcrest:hamcrest-all:1.3"
}

gitProperties {
    extProperty = "gitProps"
}
generateGitProperties.outputs.upToDateWhen { false }
bootJar {
    manifest {
        attributes(
                "Implementation-Title": appTitle,
                "Implementation-Version": project.version,
                "Commit-ID": "${-> project.ext.gitProps['git.commit.id']}",
                "Commit-Time": "${-> project.ext.gitProps['git.commit.time']}"
        )
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = true
        html.destination file("${buildDir}/reports/jacoco")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = "CLASS"
            limit {
                counter = "LINE"
                value = "COVEREDRATIO"
                minimum = 0.00
            }
        }
    }
}

semver {
    nextVersion = "minor" // major, minor (default), patch, none
    snapshotSuffix = "SNAPSHOT"
    dirtyMarker = "-dirty"
    initialVersion = "0.1.0"
}

docker {
    name "${project.group}/${project.name}:${project.version}"
    tag dockerAddress, "${dockerAddress}/${project.name}:${project.version}"
    dockerfile file('Dockerfile')
    buildArgs([JAR_FILE: "${project.name}-${project.version}.jar"])
    files "$buildDir/libs/${project.name}-${project.version}.jar"
}

build.dependsOn jacocoTestReport
build.dependsOn jacocoTestCoverageVerification
